---
title: 'Picard-profiler: a lightweight pipeline for collecting Picard metrics from targeted sequence mapping files.'
author:
  - name: Abhinav Sharma
    orcid: 0000-0002-6402-6993
    corresponding: true
    email: abhi18av@outlook.com
    #roles: #https://www.elsevier.com/authors/policies-and-guidelines/credit-author-statement
    affiliations:
      - Division of Molecular Biology and Human Genetics, Faculty of Medicine and Health Sciences, Stellenbosch University, Cape Town.

  - name: Talya Conradie
    orcid: 0009-0007-6380-5737
    corresponding: false
    affiliations:
      - Wal-yan Respiratory Research Centre, Telethon Kids Institute, WA, Australia
      - Medical, Molecular and Forensic Sciences, Murdoch University, WA, Australia

  - name: David Martino
    orcid: 0000-0001-6823-4696
    affiliations:
      - Wal-yan Respiratory Research Centre, Telethon Kids Institute, WA, Australia

  - name: "Stephen Stick"
    orcid: 0000-0002-5386-8482
    affiliations:
      - Wal-yan Respiratory Research Centre, Telethon Kids Institute, WA, Australia
      - Department of Respiratory and Sleep Medicine, Perth Children’s Hospital for Children, WA, Australia.
      - Centre for Cell Therapy and Regenerative Medicine, School of Medicine and Pharmacology, WA, Australia.

  - name: "Patricia Agudelo-Romero"
    orcid: 0000-0002-3703-4111
    affiliations:
      - Wal-yan Respiratory Research Centre, Telethon Kids Institute, WA, Australia
      - Australian Research Council Centre of Excellence in Plant Energy Biology, School of Molecular Sciences, The University of Western Australia, WA, Australia
      - European Virus Bioinformatics Center, TH, Germany.

keywords:
  - nextflow
  - pipeline
  - bioinformatics
  - picard
  - metrics
  - bam
  - sam
  - cram

abstract: |
  Next-generation targeted genome sequencing offers the opportunity to analyse regions of interest within a genome. While it is possible to incorporate targeted sequencing into whole-genome sequencing (WGS) pipelines, there remains a gap in accurately converting WGS metrics into precise target metrics. Here, we introduce the Picard-profiler pipeline (https://doi.org/10.5281/zenodo.8251379 ), designed to collects metrics from alignment files in targeted sequencing written in Nextflow. Picard-profiler accepts inputs in various alignment formats, including SAM, BAM and CRAM files.
#key-points:
#  - A web scraping script was developed to pull data from the Instituto Geogràphico Nacional into a machine-readable form for analysis
#  - Earthquake events on La Palma are consistent with the presence of both mantle and crustal reservoirs.
date: 05 October 2023
bibliography: references.bib
#citation:
#  container-title: Earth and Space Science
---

# Summary

Next-generation targeted genome sequencing offers the opportunity to analyse regions of interest within a genome.
While it is possible to incorporate targeted sequencing into whole-genome sequencing (WGS) pipelines, there remains a gap in accurately converting WGS metrics into precise target metrics.
Here, we introduce the Picard-profiler pipeline (https://doi.org/10.5281/zenodo.8251379 ), designed to collects metrics from alignment files in targeted sequencing written in Nextflow [@di_tommaso_nextflow_2017].
Picard-profiler accepts inputs in various alignment formats, including SAM, BAM and CRAM files [@hts_spec].
Additionally, to refine the metrics to the target regions the inclusion of a FASTA reference file and BED intervals file is required.
Subsequently, a MultiQC report [@ewels_multiqc_2016] will be generated, encompassing the updated sequencing coverage data for the targeted regions with some extras.

Picard-profiler was built using Nextflow workflow manager and integrates Picard metrics from
GATK picard tools [@mckenna_genome_2010; @Picard2019toolkit], using two specific metrics: (i) collecthsmetrics [@picard_collecthsmetrics_2019], which relies upon the hybrid-selection technique to capture exon sequences for targeted sequencing experiments; and
(ii) collectmultiplemetrics [@picard_collectmultiplemetrics_2021], which captures closely related metrics such as alignment summary, insert size, and quality score.
The final MultiQC report automatically collates the report from FastQC [@andrews_fastqc_2010] and Picard tools in an HTML document, which could be shared with collaborators or added as supplementary material in publications.

Picard-profiler is a portable pipeline compatible with multiple platforms, such as local desktop or workstation machines, high-performance computing environments and cloud infrastructure.
Although Picard-profiler was originally created for calculating coverage in target sequencing as a follow-up step to the nf-core/methylseq pipeline, within the Airway Epithelium Respiratory Illnesses and Allergy (AERIAL) paediatric cohort study[@kicic-starcevich_airway_2023]; its versatility allows for extending its application to other sequencing panels from various next-generation methods.


# Design principles and capabilities

Picard-profiler pipeline builds upon the standardised pipeline template maintained by the nf-core community [@ewels_nf-core_2020] for Nextflow  pipelines as well as makes use of the nf-core/modules project to install modules for FastQC, MultiQC [@ewels_multiqc_2016] , Picard as well as Samtools [@danecek_twelve_2021] within the pipeline Figure-1.


The use of the nf-core template facilitates in keeping the design of the pipeline generic and portable across different execution platforms, therefore the Picard-profiler pipeline can be used on local machines, HPC orchestrators (e.g. SLURM, PBS), and cloud computing systems such as AWS Batch, Azure Batch, Google Batch, in addition to the more generic Kubernetes distribution.


![Figure-1: Subway map for various steps in the picard-profiler pipeline.\label{fig:subway-map}](./images/subway_pic.svg)

In addition to the base workflow as mentioned in Figure-1, the pipeline also includes optional picard/createsequencedictionary [@picard_createsequencedictionary_2022] and Samtools modules to aid users in automatically generating the required genome dictionary (DICT) file, in case they have only the reference FASTA and BED files but intend to use the pipeline. Furthermore, depending on the quality check requirements by the users, we have enabled the metrics collection for 10x, 20x, 30x and 50x coverage.

# Input and output

As standard input in the Nextflow pipelines, picard-profiler expects a CSV samplesheet as an input with the following fields.

:An example of a samplesheet for picard-profiler with three required columns, capturing the (i) name of the sample (ii) path to BAM index file and (iii) path to the BAM file. []{label="samplesheet"}

| sample    | bai                    | bam                        |
|-----------|------------------------|----------------------------|
| sample-01 | /path/to/sample-01.bai | /path/to/sample-01.bam     |
| sample-02 | /path/to/sample-02.bai | /path/to/sample-02.bam     |


The very first step in the pipeline, as per the best practices of the nf-core template, is to check the validity of the file paths specified to be either a POSIX compliant file system or a cloud object storage path. Upon completion, the pipeline generates a MultiQC file with the relevant results of the analysis Figure-2.

![Figure-2: MultiQC report generated for Picard-profiler highlighting the refine metrics from targeted sequencing at 10X, 20X, 30X and 50X coverage.\label{fig:multiqc}](./images/multiqc.tiff)


# Tutorials and documentation

The steps needed to configure the pipeline inputs and configuration for your infrastructure are available in the documentation within the Github repository itself. Getting started with the pipeline setup is straightforward given that (i) `Java` (LTS > 11)  (ii) `Nextflow` (> 23.04) and (iii) a package manager (e.g. `conda`) or a container system (e.g. `docker`) are available in the execution environment. The in-built test profile from the pipeline can then be used to execute the profile on the relevant infrastructure with some test dataset.


```bash
$ nextflow run wal-yan/picard-profiler -profile test,docker –outdir test_results
```

# Funding Statement
This work was supported by the National Health and Medical Research Council of Australia (NHMRC115648).

# References

:::{#refs}

:::
